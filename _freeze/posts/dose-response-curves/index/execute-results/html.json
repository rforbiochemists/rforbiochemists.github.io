{
  "hash": "dc2d8deb274b186b76a25a1edc82d6fe",
  "result": {
    "markdown": "---\ntitle: \"Calculating a $V_{max}$ and $K_{m}$ for an Enzyme\"\nsubtitle: \"How tightly does my protein bind?\"\ntags: [data vis, ggplot2, R, lm, standard curve, tutorial]\ndate: today\nauthor: Brady Johnston\neditor: visual\ntoc: true\nimage: enzymeplot.png\ntoc-location: right\ncode-fold: show\ncode-link: true\ncode-line-numbers: true  \n---\n\nPlaying around with modelling dose-response curves in R, to calculate a $K_{d}$ for an interaction between a protein and it's potential binding target.\nAnd now some more text.\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(biochemr)\nmod <- Puromycin %>% \n  b_dose_resp(conc, rate, state, .model = drc::MM.2())\n\npurrr::map(mod$drmod, broom::glance)\n```\n\n::: {.cell-output-stdout}\n```\n[[1]]\n# A tibble: 1 x 4\n    AIC   BIC logLik    df.residual\n  <dbl> <dbl> <logLik>        <int>\n1  95.3  96.7 -44.63548          10\n\n[[2]]\n# A tibble: 1 x 4\n    AIC   BIC logLik   df.residual\n  <dbl> <dbl> <logLik>       <int>\n1  85.2  86.4 -39.5805           9\n```\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod %>% \n  b_plot(colour = state, facet = FALSE) + \n  ggplot2::coord_cartesian(ylim = c(0, NA))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/first-plot-1.png){width=672}\n:::\n:::\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmod %>% \n  b_coefs() %>% \n  knitr::kable()\n```\n\n::: {.cell-output-display}\n|state     |term |curve       |    estimate| std.error| statistic|   p.value|\n|:---------|:----|:-----------|-----------:|---------:|---------:|---------:|\n|treated   |d    |(Intercept) | 212.6838544| 7.1606488| 29.701757| 0.0000000|\n|treated   |e    |(Intercept) |   0.0641215| 0.0087112|  7.360806| 0.0000242|\n|untreated |d    |(Intercept) | 160.2802158| 6.8060674| 23.549607| 0.0000000|\n|untreated |e    |(Intercept) |   0.0477084| 0.0084203|  5.665846| 0.0003073|\n:::\n\n```{.r .cell-code}\nmod %>% \n  b_plot_coefs(state, term = \"e\")\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n:::\n\nIs there actually a difference between the two sates? We can see their fits \ninside of @fig-first-plot but we are unsure if it will actually be significant.\nWe can compare the two models:\n\n::: {.cell}\n\n```{.r .cell-code}\ncomp <- purrr::reduce(mod$drmod, anova) %>% \n  tibble::as_tibble() %>% \n  dplyr::mutate(model = as.character(mod$state))\n```\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n```{.r .cell-code}\ncomp\n```\n\n::: {.cell-output-stdout}\n```\n# A tibble: 2 x 6\n  ModelDf   RSS    Df `F value` `p value` model    \n    <int> <dbl> <int>     <dbl>     <dbl> <chr>    \n1      10 1195.    NA     NA      NA      treated  \n2       9  860.     1      3.52    0.0935 untreated\n```\n:::\n:::\n\nBy the looks of things, we probably couldn't say that there was actually a real difference between the two states, with a p-value of only 0.094 .\n\n## What about with a different data set?\n\n::: {.cell}\n\n```{.r .cell-code}\nmod <- DNase %>% \n  tibble::as_tibble() %>% \n  b_binding(conc, density, Run)\n\n \nb_plot(mod,colour = Run)\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-5-1.png){width=672}\n:::\n\n```{.r .cell-code}\nmod %>% \n  dplyr::mutate(\n    comp = purrr::map(drmod, anova, object = mod$drmod[[1]]), \n    comp_stat = purrr::map(comp, tibble::as_tibble)\n  ) %>% \n  tidyr::unnest(comp_stat) %>% \n  tidyr::drop_na(Df) %>% \n  dplyr::select(Run, ModelDf, RSS, Df) %>% \n  knitr::kable()\n```\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning in pf(testStat, dfDiff[2], df2): NaNs produced\n```\n:::\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning in pf(testStat, dfDiff[2], df2): NaNs produced\n```\n:::\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning in pf(testStat, dfDiff[2], df2): NaNs produced\n```\n:::\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning in pf(testStat, dfDiff[2], df2): NaNs produced\n```\n:::\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning in pf(testStat, dfDiff[2], df2): NaNs produced\n```\n:::\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning in pf(testStat, dfDiff[2], df2): NaNs produced\n```\n:::\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning in pf(testStat, dfDiff[2], df2): NaNs produced\n```\n:::\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning in pf(testStat, dfDiff[2], df2): NaNs produced\n```\n:::\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning in pf(testStat, dfDiff[2], df2): NaNs produced\n```\n:::\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n::: {.cell-output-stderr}\n```\nWarning in pf(testStat, dfDiff[2], df2): NaNs produced\n```\n:::\n\n::: {.cell-output-stdout}\n```\n\n1st model\n fct:      .model\n2nd model\n fct:      .model\n```\n:::\n\n::: {.cell-output-display}\n|Run | ModelDf|       RSS| Df|\n|:---|-------:|---------:|--:|\n|1   |      13| 0.0052085|  0|\n|2   |      13| 0.0030162|  0|\n|3   |      13| 0.0209994|  0|\n|4   |      13| 0.0026407|  0|\n|5   |      13| 0.0021638|  0|\n|6   |      13| 0.0030893|  0|\n|7   |      13| 0.0020699|  0|\n|8   |      13| 0.0065607|  0|\n|9   |      13| 0.0059459|  0|\n|10  |      13| 0.0059394|  0|\n|11  |      13| 0.0055573|  0|\n:::\n:::\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": [],
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}